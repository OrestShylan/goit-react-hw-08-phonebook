{"version":3,"file":"static/js/12.30df3aa2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts.module.css?8552","redux/phonebook/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactForm/ContactFrom.module.css?9550","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/ContactsList.js","components/Contacts/Contacts.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsContainer\":\"Contacts_contactsContainer__xQQHw\",\"contactsItem\":\"Contacts_contactsItem__FK3AO\",\"contactsPreloader\":\"Contacts_contactsPreloader__OG6Wn\",\"preloader\":\"Contacts_preloader__nWWqY\"};","export const selectContacts = store => store.storeContacts.stateContacts;\nexport const selectIsLoading = store => store.storeContacts.isLoading;\nexport const selectError = store => store.storeContacts.error;\nexport const selectFilter = store => store.storeFilter.stateFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"Filter_inputWrapper__-FNL8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterInStateContacts } from 'redux/phonebook/sliceFilter';\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const getInput = ({ target: { value } }) => {\n    dispatch(filterInStateContacts({ value }));\n  };\n\n  return (\n    <div className={css.inputWrapper}>\n      <label htmlFor=\"searchInput\">Search contacts by name here</label>\n\n      <input\n        className=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        id=\"searchInput\"\n        name=\"filter\"\n        onChange={getInput}\n        value={filter}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"userFormWrapper\":\"ContactFrom_userFormWrapper__6C8h0\",\"inputWrapper\":\"ContactFrom_inputWrapper__i0C1r\",\"formLabel\":\"ContactFrom_formLabel__irVeq\",\"submitBtn\":\"ContactFrom_submitBtn__vKZRP\"};","import Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/phonebook/selectors';\nimport { addContact } from 'redux/phonebook/operations';\nimport css from './ContactFrom.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n\n  const getInput = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setUserName(value);\n    } else {\n      setUserNumber(value);\n    }\n  };\n\n  const setContact = e => {\n    e.preventDefault();\n\n    const isExist = contacts.find(contact => contact.name === userName);\n\n    if (isExist) {\n      Notiflix.Notify.warning(`User \"${userName}\" is already in contacts`);\n      return;\n    } else {\n      const isCreated = dispatch(\n        addContact({ name: userName, number: userNumber })\n      );\n\n      if (isCreated) {\n        Notiflix.Notify.success(`Contact \"${userName}\" added successfully!`);\n        setUserName('');\n        setUserNumber('');\n      }\n    }\n  };\n\n  return (\n    <form className={css.userFormWrapper} onSubmit={setContact}>\n      <div className={css.inputWrapper}>\n        <label htmlFor=\"UserName\" className={css.formLabel}>\n          Name\n        </label>\n\n        <input\n          className=\"form-control me-2\"\n          placeholder=\"Enter contact name here\"\n          aria-label=\"User Name\"\n          id=\"UserId\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={getInput}\n          value={userName}\n        />\n      </div>\n\n      <div className={css.inputWrapper}>\n        <label htmlFor=\"UserNumber\">Phone Number</label>\n        <input\n          className=\"form-control me-2\"\n          placeholder=\"Enter contact phone number here\"\n          aria-label=\"Phone number\"\n          id=\"number\"\n          onChange={getInput}\n          value={userNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button className=\"btn btn-outline-primary\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\",\"listItem\":\"Contacts_listItem__ipWRN\"};","import Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/phonebook/operations';\n\nexport function ContactsList({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(promise => {\n        Notiflix.Notify.success(`Contact \"${promise.name}\" has been deleted`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(`Some error: \"${error}\"`);\n      });\n  };\n\n  return (\n    <li>\n      {name}: {number}\n      <button className=\"btn btn-outline-primary\" onClick={handleDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsList.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import css from './Contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport { ContactsList } from './ContactsList';\n\nimport { selectContacts, selectFilter } from 'redux/phonebook/selectors';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : contacts;\n\n  return (\n    filteredContacts.length > 0 && (\n      <ul className={css.list}>\n        {filteredContacts.map(({ name, number, id }) => {\n          return (\n            <ContactsList\n              key={id}\n              name={name}\n              number={number}\n              id={id}\n            ></ContactsList>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n","import css from './Contacts.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/phonebook/selectors';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/phonebook/operations';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contactsList = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.contactsContainer}>\n        <div className={css.contactsItem}>\n          <h2>Phonebook</h2>\n          <ContactForm />\n        </div>\n        {contactsList.length > 0 && (\n          <div>\n            <div className={css.contactsItem}>\n              <h2>Contacts</h2>\n              <Filter />\n            </div>\n            <div className={css.contactsItem}>\n              <div className={css.contactsPreloader}>\n                <p>List of contacts</p>\n                <div className={css.preloader}>\n                  {isLoading && !error && <></>}\n                </div>\n              </div>\n              <Contacts />\n              {error && <h2>Error: {error}</h2>}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","store","storeContacts","stateContacts","selectIsLoading","isLoading","selectError","error","selectFilter","storeFilter","stateFilter","Filter","dispatch","useDispatch","filter","useSelector","className","css","htmlFor","type","placeholder","id","name","onChange","value","target","filterInStateContacts","ContactForm","contacts","useState","userName","setUserName","userNumber","setUserNumber","getInput","onSubmit","e","preventDefault","find","contact","Notiflix","addContact","number","pattern","title","required","ContactsList","onClick","deleteContact","unwrap","then","promise","catch","Contacts","filteredContacts","toLowerCase","includes","length","map","contactsList","useEffect","fetchContacts"],"sourceRoot":""}