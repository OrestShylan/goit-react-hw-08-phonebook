{"version":3,"file":"static/js/635.519c3142.chunk.js","mappings":"0RACA,EAAuB,wBAAvB,EAAuD,yB,SCK1CA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAW,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrB,UAATD,EACFL,EAAaM,GAEbJ,EAAgBI,EAEnB,EAEKC,EAAY,mCAAG,WAAMC,GAAN,oEACnBA,EAAEC,iBACGV,GAAcE,EAFA,uBAGjBS,IAAAA,OAAAA,QAAA,8JAHiB,0BAOnBd,GACEe,EAAAA,EAAAA,IAAW,CACTC,MAAOb,EACPc,SAAUZ,KAGXa,SACAC,MAAK,SAAAC,GACJN,IAAAA,OAAAA,QAAA,iGAA4CM,EAAQC,KAAKZ,KAAzD,KACD,IACAa,OAAM,SAAAC,GACLT,IAAAA,OAAAA,QAAA,sDACcS,EADd,4MAGD,IArBgB,2CAAH,sDAwBlB,OACE,kBAAMC,UAAWC,EAAUC,SAAUf,EAAcgB,aAAa,MAAhE,WACE,mBAAOH,UAAWC,EAAlB,mBAEE,kBACEG,KAAK,QACLnB,KAAK,QACLoB,SAAUtB,EACVG,MAAOP,QAGX,mBAAOqB,UAAWC,EAAlB,sBAEE,kBACEG,KAAK,WACLnB,KAAK,WACLoB,SAAUtB,EACVG,MAAOL,QAGX,mBAAQuB,KAAK,SAAb,sBAGL,EChEc,SAASE,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAChC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\"};","import Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchLogIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const getInput = ({ target: { name, value } }) => {\n    if (name === 'email') {\n      setUserEmail(value);\n    } else {\n      setUserPassword(value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userEmail || !userPassword) {\n      Notiflix.Notify.failure(`Всі поля мають бути заповнені`);\n      return;\n    }\n\n    dispatch(\n      fetchLogIn({\n        email: userEmail,\n        password: userPassword,\n      })\n    )\n      .unwrap()\n      .then(promise => {\n        Notiflix.Notify.success(`Ласкаво просимо, ${promise.user.name}.`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `Помилка: ${error}. Можливо не правильний логін чи пароль.`\n        );\n      });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={getInput}\n          value={userEmail}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={getInput}\n          value={userPassword}\n        />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","useState","userEmail","setUserEmail","userPassword","setUserPassword","getInput","target","name","value","handleSubmit","e","preventDefault","Notiflix","fetchLogIn","email","password","unwrap","then","promise","user","catch","error","className","css","onSubmit","autoComplete","type","onChange","Login","Helmet"],"sourceRoot":""}